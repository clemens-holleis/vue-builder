(function(){if("function"!=typeof Vue)throw"function Vue() could not be found!";let vueTemplateObj={},keyWhiteList=[],vueHooksObj={hookName:[function(){},function(){}]};vueTemplateObj={el:"",data:{},methods:{},computed:{},watch:{},beforeCreate:function(){},created:function(){},beforeMount:function(){},mounted:function(){},beforeUpdate:function(){},updated:function(){},beforeDestroy:function(){},destroyed:function(){}},keyWhiteList=function(vueObjectTemplate){let keyWhiteList=[];for(let key in vueObjectTemplate)keyWhiteList.push(key);return keyWhiteList}(vueTemplateObj),vueHooksObj=function(vueObjectTemplate){let vueHooksObj={};for(let key in vueObjectTemplate)"function"==typeof vueObjectTemplate[key]&&(vueHooksObj[key]=[]);return vueHooksObj}(vueTemplateObj),Vue.inspectBuilder=function(){return{functions:vueHooksObj,keyWhiteList:keyWhiteList}},Vue.add=function(vueDataObj){for(let key in vueDataObj){if(-1==keyWhiteList.indexOf(key))throw'key "'+key+'" not supported!';if(typeof vueTemplateObj[key]!=typeof vueDataObj[key])throw'key "'+key+'" should be of type '+typeof vueTemplateObj[key];switch(typeof vueTemplateObj[key]){case"object":vueTemplateObj[key]=Object.assign(vueTemplateObj[key],vueDataObj[key]);break;case"function":vueHooksObj[key].push(vueDataObj[key]);break;default:vueTemplateObj[key]=vueDataObj[key]}}},Vue.build=function(){for(let hookName in vueHooksObj)vueTemplateObj[hookName]=function(){for(let indexInnerFunc in vueHooksObj[hookName])vueHooksObj[hookName][indexInnerFunc].call(this)};return new Vue(vueTemplateObj)}.bind(this)}).apply(Vue);